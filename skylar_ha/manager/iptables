#!/bin/sh
#
# Description: 
#
# Authors:      Qin Guanri
#
# Copyright:    2016 403709339@qq.com
# License:      
#
###############################################################################
# Global:
WORK_DIR=$(cd `dirname $0`; cd ../; pwd)
source $WORK_DIR/conf/ha.conf

tcp_ports_default=("21" "22" "80" "443" "2224" "3121" "21064" "873" "11300" "5432" "6379" "7789" "111" "892" "2049")
udp_ports_default=("5404" "5405" "111" "892")
: ${tcp_ports=${tcp_ports_default[@]}}
: ${udp_ports=${udp_ports_default[@]}}

###############################################################################
IPTABLES_RPM_TAR="yum_iptables.tar"

prepare() {
    source $WORK_DIR/conf/ha.conf

    if [ ! -f $WORK_DIR/dependent/$IPTABLES_RPM_TAR ]; then
        echo "ERROR. Can not find file: $WORK_DIR/dependent/$IPTABLES_RPM_TAR"
        return 1
    fi

    if ! disable_dhcp; then
        echo "ERROR. disable dhcp failed."
        return 1
    fi

    return 0
}


install() {
    echo "installing iptables services, please wait a minute ..."
    $WORK_DIR/include/common check_install iptables-services
    if [ $? -ne 0 ]; then 
        yum install -y --disablerepo=\* --enablerepo=Iptables iptables-services; sleep 2
    fi

    setenforce 0
    sed -i.bak "s/SELINUX=enforcing/SELINUX=permissive/g" /etc/selinux/config

    systemctl stop firewalld.service
    systemctl mask firewalld.service
    systemctl disable firewalld.service

    iptables -L -n
    
    iptables -A INPUT -i lo -j ACCEPT

    # if not exist rules, insert it
    for p in ${tcp_ports[@]}
    do
        iptables -C INPUT -p tcp --dport $p -j ACCEPT 
        [ $? -ne 0 ] && iptables -I INPUT -p tcp --dport $p -j ACCEPT
    done

    for p in ${udp_ports[@]}
    do
        iptables -C INPUT -p tcp --dport $p -j ACCEPT
        [ $? -ne 0 ] && iptables -I INPUT -p udp --dport $p -j ACCEPT
    done

    #允许vrrp
    iptables -C INPUT -p vrrp -j ACCEPT
    [ $? -ne 0 ] && iptables -I INPUT -p vrrp -j ACCEPT

    service iptables save
    systemctl enable iptables.service
    systemctl restart iptables.service

    if [ $? -ne 0 ]; then
        echo "ERROR. start iptables failed."
        return 1
    fi

    return 0
}


disable_dhcp() {
    source $WORK_DIR/conf/ha.conf
    device=`ip addr | grep -B 2 "$master_ip\|$slave_ip" | head -1 | awk {'print $2'} | awk -F ":" {'print $1'}`
    network_file="/etc/sysconfig/network-scripts/ifcfg-$device"
    if [ ! -n $device ]; then
        network_file=`ls /etc/sysconfig/network-scripts/ifcfg-e* | head -1`
    fi
    
    cat $network_file | grep "dhcp\|DHCP" >> /dev/null
    if [ $? -eq 0 ]; then
        echo "ERROR. This host use dhcp to get ip. It should be config to static. please config it at this file:$network_file. After that, you can retry again."
        ## TODO: 如果IP是DHCP获取的。直接返回报错，提示修改为静态IP。不在这脚本中进行调整dhcp。
        #return 1

        ## 如果想在这个脚本中自动调整为static，可以将上面的return 1注释掉即可。下面是自动调整为static的逻辑。
        cp $network_file /etc/sysconfig/backup_network-scripts_$device
        sed -i 's/dhcp/static/g' $network_file
        my_ip=$master_ip
        ip addr | grep "$slave_ip" >> /dev/null
        if [ $? -eq 0 ]; then
            my_ip=$slave_ip
        fi

        cat $network_file | grep 'skyha' >>/dev/null
        if [ $? -ne 0 ]; then 
            echo "IPADDR=$my_ip #add by skyha script
NETMASK=255.255.255.0 #add by skyha script
NM_CONTROLLED=no #add by skyha script" >> $network_file
        fi

        echo $network_file
        systemctl restart network.service
        ip addr | grep $my_ip >> /dev/null
        if [ $? -ne 0 ]; then
            echo "ERROR. disable dhcp failed."
            mv -f /etc/sysconfig/backup_network-scripts_$device $network_file
        else
            echo "OK. dhcp is disable."
        fi
    fi

    return 0
}

enable_dhcp() {
    device=`ip addr | grep -B 2 "$master_ip\|$slave_ip" | head -1 | awk {'print $2'} | awk -F ":" {'print $1'}`
    network_file="/etc/sysconfig/network-scripts/ifcfg-$device"
    if [ ! -n $device ]; then
        network_file=`ls /etc/sysconfig/network-scripts/ifcfg-e* | head -1`
    fi
    sed -i 's/static/dhcp/g' $network_file
    systemctl restart network.service
}

clean() {
    return 0
}

source $WORK_DIR/conf/ha.conf

case "$1" in
    prepare)    prepare
                exit $?;;

    install)    install
                exit $?;;

    clean)      clean
                exit $?;;

    *)          $@
                exit $?;;
esac
