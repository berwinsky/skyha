#!/bin/sh
#
# Description: 
#
# Authors:      Qin Guanri
#
# Copyright:    2016 403709339@qq.com
# License:      
#
###############################################################################
# Global:
WORK_DIR=$(cd `dirname $0`; cd ../; pwd)


prepare() {
    systemctl stop nfs-server.service
    return 0
}

install() {
    cd $WORK_DIR/dependent

    $WORK_DIR/include/common check_install nfs-utils rpcbind
    if [ $? -ne 0 ]; then
        yum install -y --disablerepo=\* --enablerepo=Nfs nfs-utils rpcbind; sleep 1
    fi

    HEARTBEAT_RSC_DIR="/usr/lib/ocf/resource.d/heartbeat"
    rm $HEARTBEAT_RSC_DIR/nfsserver
    cp $WORK_DIR/dependent/nfsserver $HEARTBEAT_RSC_DIR/nfsserver
    chmod 755 $HEARTBEAT_RSC_DIR/nfsserver

    systemctl start rpcbind.service

    echo "" > /etc/exports
    systemctl start nfs-server.service
    
    if [ $? -ne 0 ]; then
        echo "ERROR. systemctl start nfs-server.service failed."
        return 1
    fi
    return 0
}

failover() {
    pcs -f resource_cfg resource create nfs-daemon nfsserver \
           nfs_shared_infodir=/drbd/nfsshare/nfsinfo nfs_no_notify=true \
           lockd_udp_port=32769 lockd_tcp_port=32803 mountd_port=892 \
           rquotad_port=875 statd_port=662 nfsd_args="-G 10 -L 10"

    pcs -f resource_cfg resource create nfs-root exportfs \
           clientspec=* options=rw,sync,all_squash \
           directory=/drbd/nfsshare/exports fsid=0

    # Add an nfsnotify resource for sending NFSv3 reboot notifications
    # once the entire NFS deployment has initialized. 
    pcs -f resource_cfg resource create nfs-notify nfsnotify \
            source_host=$vip_master
}

recover() {
    return 0
}

check_status() {
    crm_mon -Afr -1 | grep 'nfs-root' | grep Started
    if [ $? -eq 0 ]; then
        echo "OK. NFS is running correctly."
        return 0
    fi

    return 1
}

clean() {
    return 0
}

source $WORK_DIR/conf/ha.conf

my_ip="$master_ip"
hostname -I | grep "$slave_ip"
if [ $? -eq 0 ]; then
    my_ip="$slave_ip"
fi

case "$1" in
    prepare)    prepare
                exit $?;;
    install)    install
                exit $?;;
    failover)   failover
                exit $?;;
    recover)    recover;;
    clean)      clean
                exit $?;;
    status)     check_status;;
    *)          $@
                exit $?;;
esac
